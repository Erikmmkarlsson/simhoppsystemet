@model simhoppsystemet.Models.Competition

@{
    ViewData["Title"] = "Edit";
}
@using static simhoppsystemet.Models.Competitor;




<h1>Edit</h1>

<h4>Competition</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>

        </form>


        @foreach (var std in ViewData["CompetitorinEvent"] as IList<CompetitionCompetitor>)
        {
            <li>@std.CompetitorId</li>

             }



                <form asp-action="AddCompetitors">
                    <div class="form-group">

                        <div class="form-group">

                            <label for="CompetitorName" class="control-label"></label>
                            <select name="CompetitorName" class="dropdown" asp-items="ViewBag.Competitors"></select>
                        </div>

                        <input type="submit" value="Add Competitors" class="btn btn-primary" />
                    </div>
                </form>
        </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
